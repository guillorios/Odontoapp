<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="gbVerification.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="gbReturnValues.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="lblFalseAcceptRate.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="gbEnrollment.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="gbEventHandlerStatus.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="lblMaxFingers.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="lblMask.GenerateMember" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>