<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSeleccionar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnEditar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAK6QAA
        CukB/XXO0wAAAv9JREFUOE+Fk3lIk3EYx1+jiw7IsMhIzaMyojJUDC27PKAssVRi5E2JVqLhpoQnDcdc
        8+wgCLKc5q2U4ZpnVGLzWE6X5mRp/uGamgeJ2tRvz2slpUQPfPj9Xni+X77P+z4vwywpobDeIS6uvFAs
        rlZlZdUPZWTUTqWmvpxKTi4f4fFyuzgcUYWTU9Bpkq0nVizVMxJJ6+TcHDA+Dmi1QF+fHj09M1CppvDm
        zReUlHTBzS12mISOxMZlBvn5HXNqNSCXj6GqagCVlf3IzVUiPb0OCQll8PS8BXv7K+Mk5BFmfxoY0IPB
        48ct0xoN0NAwgvx8NfLyunHvnhwpKTJwuQXw8RHAwSF0lHpTCSum+4SJo9JuW7t0v9XX1HPe2QrFwKxO
        951ij0Gp1KG5WYsXL9R48kQBkagWMTFFOHo08huJRcQupt/V/KNe+R7y6XcQdcYgRnp5vlv3CQrFBAoK
        einBR9y/L4dA8DOBt7cABw8GjC0afHC2HCrrkIKvPw+x3g83Bs/A760TKlSlaGrSLozBGvD5VYiKkiyY
        nDzJnSSD2wsJHhyyig5OD5gPG3SFcPISsvTBiB3yAqf5MNIV8ejVDEMqVUMiaUda2iv4+gopQSA7gnjB
        gMrQNmhvtmvDPoT2uYI/fhF3ZkMQ9/UCOConBNR6oKallcR1lCAP/v6ZcHHh/mWwkkxMrXibHx6TWSNE
        cwqJoz4Qzweg5jMP/Z0CdJSEo+mtGsnJz3H9eg5sbIImFkf49R1X0WluzjOU2FdawE9zHHlN/kDbA0D9
        CKhOQo9MRrsgg4dHEkxNnZ9R/y3C4s89YE0szaI3Fe8oNoK2KBJ4JYDudQbKc7KQk5E5ExEhbDc0tMyl
        vrsEhzBauomrmbXM7i2RG541ZnsBpVzEhgXiZnwiwq5e66fmp0Q8cZYdm2DHX1armXWMdbiNMT/B2bTw
        yIE9jbZ29kPu7u5t1CkkHIhN/xL/dltDl52EGxFIcInEX/ftdLJr/99i47F/21bChGBfmDHBmi/WDx0y
        oaGPbzWCAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAALDAAA
        CwwBP0AiyAAAAwVJREFUOE9Vk39MzGEcxz91XYlwjsr14/rJEq50nZLkwtDIj1WnhBwyFTKdMq0tlpmt
        tIz8Ec38cVaENUa4fjlSIqWG2Wxa7cZxCZPaubfn+3W+6tne2/e7Pa/383yez/tDNG5pngV4JDYEHk9/
        FNmZ2a4e2vY41hJfP7cj4Py0E9O1LgFsqwuTw3hG+N47qEjO61s9dO37aRhsldC90aDUlI7SgVTk9qxC
        2HXZZ9cikZYBEibRBJPdgws0Jf1p1nbU4qq1ENp3UdhlyEJAnQyH3i5B3utlOPwqBiE33ccogw4y2IPJ
        kTdJej7X60BP/LARelSN7kf5zzSk9IWheeARuDWn3hNZr1TI6VJh33MlJleKzeRNmxg6gy9nxV2vU3pL
        CfS/CnHmxxZU/EhHoWkt0lpSeIPfNkD50B/ajvnIeKpA7E05aANdYnAYkzMlNob2PRi5gLTecEQ0uSOq
        1RNxT2SYfZug7fxrMmazIt44D0nGYCQ0BINy6QWDNUxSSmldPKq3HIXqRhSsVsAyMoyh0W/4NjaMT79M
        DGdXsC9N11Ko6+VwOe70hcFHmHxpfeOi0UpTJtR31Pw2q80mICO/R2Bj//9W1rv1iKzxgEsRb3CSKYiU
        dV69FR92ILEtGGENEkQaJFjSMhMLm12xtXuVAOe8Xwe1wQuh1bPgsJu6BAO3MqdSXfdaHOxezBTNa0+n
        Apk9mwVY15+EeAYra2XwOTcVpKIaoQTRTgrxq/H4ms3apG0PR0abAhuNgXhguc0bFPRroG7yRnS9N+ZU
        SeGU72gmMV0UHpGP51HKDqyRWrezNiUbQ5HQ7Ifqj+U4MbgXcY0yRNR6IqhKgsnFzmMkpyuMKRbaaM+2
        lLaRbkqF2BJzywcr78mx/L4/VCyJIZel8D7rBied6JMdLmPMGnukhbngsu1JMkqiBKqmLHo56ZijWVwg
        MrPovqAIVrOYDw93Mgf/j/K4oeBMpEzhTKlM+faX5trF9TyFSWE/eeIwjTPhrsSN7EwmOd/nv/K1mzvb
        SxaQP9DanYEkI5PhAAAAAElFTkSuQmCC
</value>
  </data>
</root>