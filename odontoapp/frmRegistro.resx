<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSalir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAK/wAA
        Cv8BNGKaggAAAwVJREFUOE9Vk39MzGEcxz91XYlwjsr14/rJEq50nZLkwtDIj1WnhBwyFTKdMq0tlpmt
        tIz8Ec38cVaENUa4fjlSIqWG2Wxa7cZxCZPaubfn+3W+6tne2/e7Pa/383yez/tDNG5pngV4JDYEHk9/
        FNmZ2a4e2vY41hJfP7cj4Py0E9O1LgFsqwuTw3hG+N47qEjO61s9dO37aRhsldC90aDUlI7SgVTk9qxC
        2HXZZ9cikZYBEibRBJPdgws0Jf1p1nbU4qq1ENp3UdhlyEJAnQyH3i5B3utlOPwqBiE33ccogw4y2IPJ
        kTdJej7X60BP/LARelSN7kf5zzSk9IWheeARuDWn3hNZr1TI6VJh33MlJleKzeRNmxg6gy9nxV2vU3pL
        CfS/CnHmxxZU/EhHoWkt0lpSeIPfNkD50B/ajvnIeKpA7E05aANdYnAYkzMlNob2PRi5gLTecEQ0uSOq
        1RNxT2SYfZug7fxrMmazIt44D0nGYCQ0BINy6QWDNUxSSmldPKq3HIXqRhSsVsAyMoyh0W/4NjaMT79M
        DGdXsC9N11Ko6+VwOe70hcFHmHxpfeOi0UpTJtR31Pw2q80mICO/R2Bj//9W1rv1iKzxgEsRb3CSKYiU
        dV69FR92ILEtGGENEkQaJFjSMhMLm12xtXuVAOe8Xwe1wQuh1bPgsJu6BAO3MqdSXfdaHOxezBTNa0+n
        Apk9mwVY15+EeAYra2XwOTcVpKIaoQTRTgrxq/H4ms3apG0PR0abAhuNgXhguc0bFPRroG7yRnS9N+ZU
        SeGU72gmMV0UHpGP51HKDqyRWrezNiUbQ5HQ7Ifqj+U4MbgXcY0yRNR6IqhKgsnFzmMkpyuMKRbaaM+2
        lLaRbkqF2BJzywcr78mx/L4/VCyJIZel8D7rBied6JMdLmPMGnukhbngsu1JMkqiBKqmLHo56ZijWVwg
        MrPovqAIVrOYDw93Mgf/j/K4oeBMpEzhTKlM+faX5trF9TyFSWE/eeIwjTPhrsSN7EwmOd/nv/K1mzvb
        SxaQP9DanYEkI5PhAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnRegistrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAK6QAA
        CukB/XXO0wAAAwtJREFUOE9tk3ss1WEYxx8nl/VHyJpNpdZFbbS2k7WMRpkIXXaybqfmckyd0DLMQZcN
        RyfLlqikC1KUc0TqnLN0QSatGq2LHERMR01iTNky59vzM7m03u2z97Ln+32f99nzEk0PMyL1HNp/14W2
        lYfR7qpLJHvxkvZX1ZCN6xIOs5oRO2MZ3eNNRzszKbm3llI+DVGKEZQ2AEoyQpTUAUrsBgUW6Fm/5r8m
        jqovQ6tUXbC8DsxLaoVrhgE7LxgQW9GDzJo+rM3sBEV9AHlmFbGBE2MxOxNF+7BL3jAWZ3yBRUIb4rU9
        UGiNSH34Fcf1fQhW94GOGUCy1yYSn8pk8VLGfNpEoquyLQMcFe9hyek7pRmwQtkOivkICn8LCnnFNDDP
        Qburx8gpPJHFC5k5EyZW69IDF6t6TS63x7EjuxWykl6cq/6Ow7e6YR/TBAquB0mfsfgJKOgxaMu9EXLw
        j2DpAsaMrK2tba9oGoxZ9b1QXtMiPjUL4RFyRCqUOFPaiMNX22AueQryug9yuwNxyG2T2ULf8yxeP1FU
        iURSERcXB41GA71ej/LycpSWlkKtViNBkYjQIwmofPwGhcUVqNWVoONd9QgLLzObmLnk6ek5qtPp0Nzc
        jNzcXERGRiIwMADu7u7Iy8uDwdAC1Wkl6moeod/YjuaONhMtCspn8YaJDMRicbZgEBUVhaamRgAmREQc
        giw0GGmpqRgc7EdJSSUUJ1RIyS4e35f0yEAOQYUs9meshToucHNz08rlcpSVaZBfoEaHcRQ5xTWQhRzk
        LK6g5QfweQw4kqD8zfEa5iTjxcwTDITGWOnh4fEgPjYGlY0DaP8JaLuB7QFbv0ml0uFbbUBRK7A3RN7F
        sTnMRsaOmeoHoc9X+3hvrjtb0Yqrb4H0ogaTlZXlTTu7+RcPhMUMhEcn/5pva3OD44Q+EJqJ/87sIZg4
        +/r51e4Jjh5Z4+ysnbxtl0gk2skk8/4E4/P37f8aCPsJE+bQ5DulPDsytswyZvnkWvQ/8d8zwcRhUmDP
        s1AjId2ZTOn/ADwLfTCadYTJAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="rtxtTotalLetras.Text" xml:space="preserve">
    <value>Software protegido por Patentes en Colombia, queda prohibida su distribucion o copia ilegal, todos los derechos reservados.

Odontoapp es propiedad intelectual de Orthoandina Digital &amp; Sion Ingenieria. NIT.

Todos los contenidos, modulos e interfaces son propiedad de sus respectivos autores. Todas las marcas y nombres registrados, y los logotipos asociados, son propiedad de las personas y empresas a los que pertenezcan legalmente.

Los documentos, información y contenidos en este software se encuentran protegidos por el marco legal en Colombia: la Ley de Propiedad Intelectual y las normas reglamentarias de su desarrollo parcial, sin perjuicio de lo establecido por los convenios y tratados internacionales de los que el país es parte interesada.

La alteración o deformación de un software, así como su copia, exhibición o ejecución pública sin el consentimiento de su autor o del titular de los derechos correspondientes, es constitutivo de delito. En caso de vulneración de los derechos de propiedad intelectual e industrial contenidos en este programa, Odontoapp podrá ejercer sus derechos e iniciar las acciones legales que correspondan ante organismos Colombianos o ante la Organización Mundial de la Propiedad Intelectual.

Bajo ninguna circunstancia se permite la reproducción o distribución total o parcial del material contenido en Odontoapp con propósitos comerciales o lucrativos.

Derechos de autor:

El copyright del contenido enviado a Odontoapp para su publicación, seguirá perteneciendo al autor del mismo.

Al enviar a Odontoapp un documento, software, o material cualquiera, concede a Odontoapp el derecho no exclusivo y sin limitación de ámbito geográfico, para reproducir, enlazar, distribuir y mostrar dicho material.

Derechos reservados:

Odontoapp se reserva la facultad de efectuar, en cualquier momento y sin previo aviso, modificaciones respecto a su presentación, contenidos y servicios ofrecidos.

Están reservados todos los derechos que no se conceden expresamente.

® Odontoappointmen es Marca Registrada</value>
  </data>
</root>